<section class="POST">
  <form method="post" action="{% url 'product_create' %}">
    <fieldset>
      {% csrf_token %}

      <label for="name">Nombre:</label>
      <input type="text" name="name" placeholder="Product name" required>

      <label for="price">Precio:</label>
      <input type="text" id="price" name="price" placeholder="1.5" required>

      <label for="description">Descripción:</label>
      <textarea name="description" placeholder="Product description"></textarea>

      <label for="available">Disponible:</label>
      <input type="checkbox" name="available" required>

      <label for="category">Categoría:</label>
      <select id="category" name="category">
        <option value="">-- Seleccione una categoría --</option>
        {% for category_obj in categories %}
          <option value="{{ category_obj.id }}" {% if category_obj.id == category_id|add:"0" %}selected{% endif %}>
            {{ category_obj.name }}
          </option>
        {% endfor %}
      </select>

      <button type="submit">Crear</button>
    </fieldset>
  </form>

  <p>
    <a href="{% url 'product_list' %}">Volver a la lista de productos</a>
  </p>
</section>

-------------------------------------------------------------------------------------------------------------------

from django.shortcuts import render, redirect

class ProductCreateView(View):
    template_name = 'core/product_create.html'

    def get(self, request, *args, **kwargs):
        categories = Category.objects.all()
        return render(request, self.template_name, {'categories': categories})

    def post(self, request, *args, **kwargs):
        # Recupera los datos del POST
        name = request.POST.get("name")
        price = request.POST.get("price")
        description = request.POST.get("description", "")
        # Los checkboxes envían "on" si están marcados, o no están presentes si no lo están
        available = request.POST.get("available") == "on"
        category_id = request.POST.get("category")
        category = Category.objects.filter(id=category_id).first() if category_id else None

# Crea el nuevo producto
    new_product = Product.objects.create(
            name=name,
            price=price,
            description=description,
            available=available,
            category=category
    )

-------------------------------------------------------------------------------------------------

# Redirige a la lista de productos o a los detalles del producto creado
return redirect('product_list')

# Crear producto (GET para formulario, POST para guardar)
path('products/create/', ProductCreateView.as_view(), name='product_create'),

# Configuración para multiselect y tabla intermedia:
<label for="tags">Selecciona los Tags:</label>
<select name="tags" id="tags" multiple>
    {% for tag in tags %}
        <option value="{{ tag.id }}">{{ tag.name }}</option>
    {% endfor %}
</select>

---------------------------------------------------------------------------------------------

Configuración para un campo imagen:

    `<form method="post" action="" enctype="multipart/form-data">`
    `<input type="file" name="image" id="image">`

    `image_file = request.FILES.get('image')`  # Para archivos de imagen

    `image = image_file`